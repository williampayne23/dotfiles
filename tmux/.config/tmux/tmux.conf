#NEW PREFIX 
unbind-key C-b
set prefix C-Space
set-option -g prefix C-Space
bind-key C-Space send-prefix
set-option -g detach-on-destroy off

#MOUSE
set -g mouse on 
# set -g mouse-select-pane on

#FUZZY SEARCHER
unbind-key f
bind f run-shell "zsh -ic '~/.config/tmux/scripts/session-manager'"

#New windows and panes in same adn use reasonable names

unbind-key '"'
unbind-key %
unbind-key c

bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Windows always have numbers
set -g renumber-windows on
bind-key x kill-pane

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Nice resize
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
# Bind zoom
bind -r m resize-pane -Z


# Copy mode
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse


# STATUS BAR
set -g status-interval 5
set -g focus-events on
# set -g status-style bg=default
# set -g status-left '#(echo "#[fg=#C3A0E1,bg=#313445]#S $(cat #{socket_path}-\#{session_id}-vimbridge) #{session_id}")'
set -g status-left '#(cat #{socket_path}-\#{session_id}-vimbridge)'
set -g status-left-length 90
set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge-R)'
##(. ~/.config/tmux/scripts/window-bar-item) '
set -g status-right-length 90
set -g status-justify absolute-centre
set -g status-bg "#313445"
set -g message-style 'fg=#C3A0E1 bg=#313445'
# set -g status-format[1] '#{S:#[range=session|#{session_id}]#{session_name}#[norange] }'
set -g window-status-format '#(~/.config/tmux/scripts/window-bar-item #I "#W")'
set -g window-status-current-format '#(~/.config/tmux/scripts/window-bar-item #I "#W" active)'

# set -g window-status-format '#I #W'
# set -g window-status-current-format '[#I #W]'

# VIM MOTIONS
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n '˙' if-shell "$is_vim" { send-keys "˙" } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n '∆' if-shell "$is_vim" { send-keys "∆" } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n '˚' if-shell "$is_vim" { send-keys "˚" } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n '¬' if-shell "$is_vim" { send-keys "¬" } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

bind-key -T copy-mode-vi '˙' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi '∆' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi '˚' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi '¬' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

unbind-key -n C-h
unbind-key -n C-j
unbind-key -n C-k
unbind-key -n C-l

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @resurrect-capture-pane-contents 'on' # allow tmux-ressurect to capture pane contents
set -g @continuum-restore 'on' # enable tmux-continuum functionality

# Other examples:
set -g default-terminal 'xterm-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# set-environment -g PATH "/opt/homebrew/bin:/bin:/usr/bin"
# run-shell ~/.config/tmux/tmux-sessionist/sessionist.tmux
run '~/.tmux/plugins/tpm/tpm'

